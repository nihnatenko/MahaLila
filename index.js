const TelegramBot = require("node-telegram-bot-api");
const fs = require("fs");

const TOKEN = '5462719501:AAHRtM-c6ww1NZkTq0tct-KyLsNvUlX_STc';
console.log('Bot has been started...')

const startText = ['Приветствую, тебя космический странник. Твоя Душа сейчас путешествует на планете Гая. Но жизнь здесь достаточно запутанная. И раз ты попал сюда, значит ты хочешь перестать играть в игру под названием Страдания. И готов начать создавать свою Великую Игру (MahaLila) и созидать как Творец.',
'Давай начнем!\n' +
'Пройди несколько уровней игры.\n' +
'И я уверен, ты раскроешь: свои таланты, радость к Жизни, безграничную Любовь, Достаток и Безусловное счастье!\n',
'Собери несколько артефактов. Они дадут ключи к Жизни в Счастье и Любви. И первый ключ - это Самоценность. \n' +
'Ты понимаешь на сколько ты ценен?\n' +
'Ты понимаешь, что Мир ждал именно тебя?\n' +
'Ты - уникален, как целая Галактика.\n' +
'И ты нужен именно таким, какой ты ЕСТЬ.\n'];
const textValue = [
'Глубинно ощутить свою ценность мне помогло осознание, что самое ценное - это моя Жизнь. Это было бы невозможно без двух проводников. И это мои мама и папа. Большую часть своей сознательной жизни я испытывал сожаления, обиды и ожидания к ним. Не понимая, какой дар я получил через них. Жизнь сама по себе - это огромная ценность. Она наполнена безграничными возможностями и красотой. И это самое большое благо, которое они мне УЖЕ дали. На обиды и недовольство нет времени. Жизнь очень коротка. Лучше поскорее начни жить ее наполнено и радостно. А это возможно, только, ощутив ее ценность. Отпустив все претензии к родителям с глубокой благодарностью за их дар. \n' +
' \n' +
'Помогло мне в этом перепроживание момента своего рождения. Это один из основных сакральных моментов в Жизни Души, который закладывает основы для всей последующей Жизни. Ощутив это 1 раз - я закрепил это навсегда. Приглашаю пройти медитацию на перепроживание своего рождения прямо сейчас.\n',
'И последний момент перед началом. Мы хотим понять ценность предложенного инструмента. Прошу тебя после прохождения медитации сделать символический взнос в поддержку нашего проекта. Или оставить свою обратную связь, почему тебе это не понравилось.'];
const textHistoryPart1 = ['Самоценность - это ценность себя во всех своих проявлениях и действиях.. и даже без действий. Ценность себя просто так. Без условий и ограничений – просто потому что ТЫ ЕСТЬ.',
'Когда я смог ощутить ценность своей Жизни и себя, в один момент Жизнь кардинально изменилась вокруг. Родные, близкие и незнакомые люди начали совсем по другому ко мне относится. Я получаю понимание, признание, принятие, Любовь и уважение. И это происходит без всех тех усилий, которые раньше я прикладывал с надрывом.',
'Почему важно начать именно с этого? Ощущение ценности внутри себя – это портал в будущее, где ты уверен, гармоничен, Счаслив, наполнен Любовью и признанием. Много лет я искал проекты, партнеров, ключи, инструменты, практики для того, чтобы сделать свою жизнь успешной и счастливой. Но каждый раз терпел разочарование. Так как без Самоценности все рассыпалось. Волны сомнений и страхов рушили все, как песочные замки.',
'Хочешь окунуться в проживание живого опыта Жизни,- наполненной признанием, Любовью и уважением окружающих?'];
const textHistoryPart2 = ['Восхитительно! Рад что ты со мной. Наберись терпения. В конце этого сообщения тебя уже ждет твое первое испытание. Осталось одно важное послание для тебя.\n' +
' \n' +
'Глубинно ощутить свою ценность мне помогло осознание, что самое ценное - это моя Жизнь. Это было бы невозможно без двух проводников. И это мои мама и папа. Большую часть своей сознательной жизни я испытывал сожаления, обиды и ожидания к ним. Не понимая, какой дар я получил через них. Жизнь сама по себе - это огромная ценность. Она наполнена безграничными возможностями и красотой. И это самое большое благо, которое они мне УЖЕ дали. На обиды и недовольство нет времени. Жизнь очень коротка. Лучше поскорее начни жить ее наполнено и радостно. А это возможно, только, ощутив ее ценность. Отпустив все претензии к родителям с глубокой благодарностью за их дар. \n' +
' \n' +
'Помогло мне в этом перепроживание момента своего рождения. Это один из основных сакральных моментов в Жизни Души, который закладывает основы для всей последующей Жизни. Ощутив это 1 раз - я закрепил это навсегда. Приглашаю пройти медитацию на перепроживание своего рождения прямо сейчас.\n',
'И последний момент перед началом. Мы хотим понять ценность предложенного инструмента. Прошу тебя после прохождения медитации сделать символический взнос в поддержку нашего проекта. Или оставить свою обратную связь, почему тебе это не понравилось.',
'Ну как тебе? Проголосуй, пожалуйста, в нашем опросе в виде маленького пожертвования. Это позволит понять действительную ценность бота MahaLila для тебя. Каждый твой евро позволит еще 5ти людям получить ценность, которую ощутил ты. За твой взнос мы подготовили тебе дополнительный подарок. Это будет сюрприз.'];
const textPaymant = 'Сделай перевод суммы соответствующей твоему впечатлению (реквизиты под вариантами). Это поможет понять нам ценность для тебя. За твою поддержку мы подготовили для тебя сюрприз. \n' +
    ' \n1 евро – благодарю за старания, медитация или текст прикольные, но дальше мне не интересно (подарка нет).\n' +
    ' \n' +
    '2 евро – интересная задумка, я бы попробовал еще что-то. Медитация или история требует улучшения (+ Тебя ждет ПОДАРОК).\n' +
    ' \n' +
    '3 евро – крутая медитация и интересная история. Хочу двигаться дальше (+ Тебя ждет ПОДАРОК)! \n' +
    ' \n' +
    'Еще ты можешь написать нам свои впечатления/пожелания/рекомендации сообщением прямо в чат боту. Мы обязательно все рассмотрим и постараемся учесть.\n';
const textSufer = 'Можешь продолжить свое жалкое существование.. шучу! Поделись, пожалуйста, что тебе не понравилось или почему ты решил остановиться? Нам очень важна твоя обратная связь.';
const textThanks = ['Вау! Я очень признателен тебе, что ты сегодня сделал одно из своих самых ценных вложений в себя. Уверен, что ты ощутишь пользу от этого уже очень скоро. Сегодня ты не только обрел свою внутреннюю Самоценность, но и преумножил и закрепил ее в виде своей благодарности. Пусть твоя Жизнь наполнится Любовью, Радостью, Гармонией и Счастьем.',
'Ну и по закону кармы. Который действует на планете Гая. Щедрость, которую проявляют люди, преумножается и возвращается им обратно. Поэтому за твое пожертвование мы подготовили для тебя очень ценный сюрприз. Ты можешь его получить по ссылке.'];
const textMeditationAsk = ['У тебя получилось прослушать медитацию?', 'Тебе понравилась медитация? Если да, оставь пожалуйста обратную связь в виде символического пожертвования. Или напиши сообщение в бот, что тебе не понравилось. И почему ты не хочешь двигаться дальше с ботом MahaLila? Нам очень важна твоя обратная связь. Заранее благо дарю, тебя!',
'Оу. Понимаю тебя. Наша жизнь наполнена суетой. И в ней мы часто упускаем что-то по-настоящему ценное. Эта медитация именно такая драгоценность. Удели сейчас всего 30 минут своего времени. Чтобы суета уже в ближайшее время начала покидать твою Жизнь. А вместо нее, твой мир начал наполняться Любовью, Радостью и Гармонией. Ждем с нетерпением твоих отзывов.',
'Еще раз делюсь с тобой опросом для оценки нашего бота. И на всякий случай еще раз напоминаю о медитации.. надеюсь ты уже ее прошел!)'];
const textDonat = [
    'ФОП Плотніков Б.О.\n' +
    'Назначение платежа: Консультаційні послуги\n',
'5169 3305 1922 0138'];
const textContacts = ['Богдан Дао\n' +
'Автор игры\n' +
'Телеграм\n' +
'@bohdandao\n' +
'\n' +
'Страница FB\n' +
'https://www.facebook.com/bohdandao/\n',
'Николай Игнатенко\n' +
'Разработчик игры\n' +
'@ihnatenkoNikola\n'];

const key1 = [
    [
        {
            text: 'Next',
            callback_data: 'firstText'
        }
    ]
];
const key1F = [
    [
        {
            text: 'Next',
            callback_data: 'firstText1'
        }
    ]
];
const key2 = [
    [
        {
            text: 'Обрести Самоценность',
            callback_data: 'value'
        }
    ],
    [
        {
            text: 'Читать предисторию',
            callback_data: 'history'
        }
    ],
];
const key3 = [
    [
        {
            text: 'Next',
            callback_data: 'value1'
        }
    ]
];
const key4 = [
    [
        {
            text: 'Получить Медитацию',
            callback_data: 'med'
        }
    ]
];
const key5 = [
    [
        {
            text: 'Next',
            callback_data: 'history1'
        }
    ]
];
const key5H = [
    [
        {
            text: 'Next',
            callback_data: 'history2'
        }
    ]
];
const key5H2 = [
    [
        {
            text: 'Next',
            callback_data: 'history3'
        }
    ]
];
const key6 = [
    [
        {
            text: 'КОНЕЧНО!',
            callback_data: 'sure'
        }
    ],
    [
        {
            text: 'еще пострадать',
            callback_data: 'safer'
        }
    ],
];
const key7 = [
    [
        {
            text: 'Next',
            callback_data: 'sure1'
        }
    ]
];
const key7S = [
    [
        {
            text: 'Получить Медитацию',
            callback_data: 'sure2'
        }
    ]
];
const key8 = [
    [
        {
            text: 'Донат',
            callback_data: 'donat'
        }
    ]
];
const bot = new TelegramBot(TOKEN, { polling: true });
bot.onText(/\/start/, msg => {
    bot.sendPhoto(msg.chat.id, fs.readFileSync(__dirname + '/с кораблем.jpeg'));
    setTimeout(() => {
        bot.sendMessage(msg.chat.id, startText[0], {
            reply_markup: {
                inline_keyboard: key1
            }
        })}, 1000);
});
bot.onText(/\pay/, msg => {
    bot.sendMessage(msg.chat.id, textPaymant);
    setTimeout(() => {bot.sendMessage(msg.chat.id, textDonat[1]); }, 2000);
    setTimeout(() => {bot.sendMessage(msg.chat.id, textDonat[0]); }, 3000);
});
bot.onText(/\meditation/, msg => {
    bot.sendMessage(msg.chat.id, 'Медитация загружаеться...');
    bot.sendAudio(msg.chat.id, './Медитация на рождение.mp3')
});

bot.onText(/\about/, msg => {
    bot.sendMessage(msg.chat.id, textContacts[0]);
    bot.sendMessage(msg.chat.id, textContacts[1]);
});

bot.on('callback_query', (query) => {
    const chatId = query.message.chat.id;

    if (query.data === 'firstText') {
        bot.sendMessage(chatId, startText[1], {
            reply_markup: {
                inline_keyboard: key1F
            }
        });
    } else if (query.data === 'firstText1') {
        bot.sendMessage(chatId, startText[2], {
            reply_markup: {
                inline_keyboard: key2
            }
        });
    }
    if (query.data === 'value') {
        bot.sendMessage(chatId, textValue[0], {
            reply_markup: {
                inline_keyboard: key3
            }
        });
    } else if (query.data === 'value1') {
        bot.sendMessage(chatId, textValue[1], {
            reply_markup: {
                inline_keyboard: key4
            }
        });
    }
    if (query.data === 'med') {
        bot.sendMessage(chatId, 'Медитация загружаеться...');
        bot.sendAudio(chatId, './Медитация на рождение.mp3')
        setTimeout(() => {
            bot.sendMessage(chatId, textHistoryPart2[2], {
                reply_markup: {
                    inline_keyboard: key8
                }
            })}, 20000);
    }
    if (query.data === 'history') {
        bot.sendPhoto(chatId, fs.readFileSync(__dirname + '/с идущей девушкой.jpeg'));
        setTimeout(() => {
            bot.sendMessage(chatId, textHistoryPart1[0], {
                reply_markup: {
                    inline_keyboard: key5
                }
            })}, 2000);
    } else if (query.data === 'history1') {
        bot.sendMessage(chatId, textHistoryPart1[1], {
            reply_markup: {
                inline_keyboard: key5H
            }
        });
    } else if (query.data === 'history2') {
        bot.sendMessage(chatId, textHistoryPart1[2], {
            reply_markup: {
                inline_keyboard: key5H2
            }
        });
    } else if (query.data === 'history3') {
        bot.sendPhoto(chatId, fs.readFileSync(__dirname + '/с космонавтом.jpg'))
        setTimeout(() => {
            bot.sendMessage(chatId, textHistoryPart1[3], {
                reply_markup: {
                    inline_keyboard: key6
                }
            })}, 2000);
    }
    if (query.data === 'sure') {
        bot.sendMessage(chatId, textHistoryPart2[0], {
            reply_markup: {
                inline_keyboard: key7
            }
        });
    } else if (query.data === 'sure1') {
        bot.sendMessage(chatId, textHistoryPart2[1], {
            reply_markup: {
                inline_keyboard: key7S
            }
        });
    } else if (query.data === 'sure2') {
        bot.sendMessage(chatId, 'Медитация загружаеться...');
        bot.sendAudio(chatId, './Медитация на рождение.mp3')
        setTimeout(() => {
            bot.sendMessage(chatId, textHistoryPart2[2], {
                reply_markup: {
                    inline_keyboard: key8
                }
            })}, 15000);
    }
    if (query.data === 'donat') {
        bot.sendMessage(chatId, textPaymant);
        setTimeout(() => {bot.sendMessage(chatId, textDonat[1]); }, 2000);
        setTimeout(() => {bot.sendMessage(chatId, textDonat[0]); }, 3000);
    }
    if (query.data === 'safer') {
        bot.sendPhoto(chatId, fs.readFileSync(__dirname + '/3.webp'));
        setTimeout(() => {
            bot.sendMessage(chatId, textSufer)}, 2000);
    }
});
